@startuml practiceKitCtrlApp_sd

hide footbox

skinparam {
    monochrome true
    dpi 300
    padding 5
    sequenceMessageAlign center
    packageStyle frame
    shadowing false
    'backgroundColor transparent
}

mainframe **sd** praticeKitCtrlApp

participant main <<utility>>
participant PraticeKitCtrl <<controller>>
participant PracticeKitComUnitIF <<boundary>>
participant Receiver <<controller>>

main -> PraticeKitCtrl++: init()
deactivate PraticeKitCtrl

loop

    note over main : empty loop

    else Interrupt from filter
    [o-> main: <<filter event>>
    activate main

    main -> main: Update filterOutputVolt

    alt filterOutputVolt > minLevelDetection || filterOutputVolt > -minLevelDetection
        main -> PracticeKitComUnitIF++: receiverHit(currentLaserID)
        deactivate PracticeKitComUnitIF
        main -> main: sleep (blocking)
        deactivate main
    end

    else Interrupt from mixerFrequencyTimer
    [o-> main: <<mixerFrequencyTimer event>>
    activate main
    main -> Receiver++: changeMixerFrequency(currentLaserID)
    return newLaserID
    main -> main: Stop converting
    main -> main: Reset filter
    main -> main: Start converting
    deactivate main
    deactivate Receiver
end

@enduml