@startuml userKitCtrlApp_sd

hide footbox

skinparam {
    monochrome true
    dpi 300
    padding 5
    sequenceMessageAlign center
    packageStyle frame
    shadowing false
    'backgroundColor transparent
}

mainframe **sd** userKitCtrlApp

participant main <<utility>>
participant UserKitCtrl <<controller>>
participant UserKitComUnitIF <<boundary>>
participant Transmitter <<controller>>
participant Receiver <<controller>>

main -> UserKitCtrl: init(unitID : char)

loop
    activate main
    main -> Receiver++: checkReceiver()
    return currentLaserID on succes and '0' on faliure

    alt succes
        main -> main: disable all interrupts
        main -> UserKitComUnitIF++: receiverHit(currentLaserID)
        return succes/faliure
        main -> main: sleep (blocking)
        main -> main: enable all interrupts
        deactivate main
    end

    else Interrupt from mixerFrequencyTimer
    [o-> main: <<mixerFrequencyTimer event>>
    activate main
    main -> Receiver++: changeMixerFrequency()
    deactivate main
    deactivate Receiver

    else Interrupt from trigger
    [o-> main: <<trigger event>>
    activate main
    main -> main: disable interrupts from trigger
    main -> Transmitter++: startTransmitting()
    deactivate Transmitter
    main -> main: start blocking timer
    deactivate main

    else Interrupt from triggerBlockingTimer
    [o-> main: <<triggerBlockingTimer event>>
    activate main

    main -> main: stop blocking timer
    main -> Transmitter++: stopTransmitting()
    deactivate Transmitter
    main -> main: enable interrupts from trigger
    deactivate main

end


@enduml