@startuml targetCtrlApp_sd

hide footbox

skinparam {
    monochrome true
    dpi 300
    padding 5
    sequenceMessageAlign center
    packageStyle frame
    shadowing false
    'backgroundColor transparent
}

mainframe **sd** targetCtrlApp

participant main <<utility>>
participant MotorControl <<controller>>
participant SonarDriver <<controller>>

[o-> main: <<start practice>>
activate main

loop
    else Practice for 60 seconds
    main -> main: Generate position
    loop
        main -> SonarDriver: Read Position
        activate SonarDriver
        return currentPosition
        deactivate SonarDriver
        main -> MotorControl: Get position control(distance)
        activate MotorControl
        MotorControl -> MotorControl: Move to position
        return positionCtrl
        deactivate MotorControl
        main -> main: Sample delay

        alt 
            [o-> main: <<TimeOut interrupt>>
            main -> main: Generate position

        end
    end
    MotorControl -[hidden]> main

    deactivate main



    else Practice over
    
    [o-> main: <<Practice over>>
    activate main
    loop
        main -> MotorControl: get position control(zero position)
        activate MotorControl
        return positionCtrl
        deactivate MotorControl
        main -> main: Move to position
        main -> main: Sample delay
        MotorControl -[hidden]> main
        deactivate MotorControl
        deactivate main
    end
end

@enduml